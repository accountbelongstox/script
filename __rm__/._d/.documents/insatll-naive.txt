centos
firewall-cmd --zone=public --add-port=8888/tcp --permanent
firewall-cmd --zone=public --add-port=8889/tcp --permanent


安装bt
sudo su
yum install -y wget && wget -O install.sh http://www.aapanel.com/script/install_6.0_en.sh && bash install.sh 93684c35
aaPanel Internet Address: https://87.120.167.92:7800/0b0da5a8
aaPanel Internal Address: https://87.120.167.92:7800/0b0da5a8
username: 4rcouk31
password: 1a0e2209

升级python
/www/server/panel/pyenv/bin/python3.7 -m pip install --upgrade pip

安装go
cd /usr/tmp
wget https://go.dev/dl/go1.19.linux-amd64.tar.gz
tar -zxvf go1.19.linux-amd64.tar.gz -C /usr/local/

添加：
cp /etc/profile /etc/profile.bak && echo export GOROOT=/usr/local/go >> /etc/profile && echo export PATH=/usr/local/go/bin:$PATH >> /etc/profile
#检查以上输入是否正确
vi /etc/profile
 
mkdir src && cd src
go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
~/go/bin/xcaddy build --with github.com/caddyserver/forwardproxy@caddy2=github.com/klzgrad/forwardproxy@naive
cp caddy /usr/bin/
/usr/bin/caddy version
setcap cap_net_bind_service=+ep /usr/bin/caddy
sysctl -w net.core.rmem_max=2500000

配置服务
vi /etc/systemd/system/naive.service
[Unit]
Description=Caddy
Documentation=https://caddyserver.com/docs/
After=network.target network-online.target
Requires=network-online.target

[Service]
Type=notify
User=root
Group=root
ExecStart=/usr/bin/caddy  run --config /www/wwwroot/ls.amster.12gm.com/cabby.json
ExecReload=/usr/bin/caddy run --config /www/wwwroot/ls.amster.12gm.com/cabby.json
TimeoutStopSec=5s
LimitNOFILE=1048576
LimitNPROC=512
PrivateTmp=true
ProtectSystem=full
AmbientCapabilities=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target



加载服务
systemctl daemon-reload
systemctl start naive
systemctl status naive
systemctl enable naive


/usr/bin/caddy run --config /www/wwwroot/ls.amster.12gm.com/cabby.json
json文件
{
    "apps": {
      "http": {
        "servers": {
          "srv0": {
            "listen": [
              ":8889"
            ],
            "routes": [
              {
                "handle": [
                  {
                    "auth_user_deprecated": "user",
                    "auth_pass_deprecated": "pass",
                    "handler": "forward_proxy",
                    "hide_ip": true,
                    "hide_via": true,
                    "probe_resistance": {}
                  }
                ]
              },
              {
                "handle": [
                  {
                    "handler": "reverse_proxy",
                    "headers": {
                      "request": {
                        "set": {
                          "Host": [
                            "{http.reverse_proxy.upstream.hostport}"
                          ],
                          "X-Forwarded-Host": [
                            "{http.request.host}"
                          ]
                        }
                      }
                    },
                    "transport": {
                      "protocol": "http",
                      "tls": {}
                    },
                    "upstreams": [
                      {
                        "dial": "www.github.com:443"
                      }
                    ]
                  }
                ]
              }
            ],
            "tls_connection_policies": [
              {
                "match": {
                  "sni": [
                    "ls.amster.12gm.com"
                  ]
                },
                "certificate_selection": {
                  "any_tag": [
                    "cert0"
                  ]
                }
              }
            ],
            "automatic_https": {
              "disable": true
            }
          }
        }
      },
      "tls": {
        "certificates": {
          "load_files": [
            {
              "certificate": "/www/server/panel/vhost/ssl/ls.amster.12gm.com/fullchain.pem",
              "key": "/www/server/panel/vhost/ssl/ls.amster.12gm.com/privkey.pem",
              "tags": [
                "cert0"
              ]
   
            }
          ]
        }
      }
    }
   }
